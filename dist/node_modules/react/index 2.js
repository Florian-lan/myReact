(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (global.index = global.index || {}, global.index.js = factory()));
})(this, (function () { 'use strict';

    // Symbol的作用：创建一个独一无二的属性名，避免命名冲突
    // 通过判断Symbol的类型和Symbol是否存在 判断当前宿主环境是否支持Symbol
    const supportSymbol = typeof Symbol === 'function' && Symbol.for;
    // 该常量用于唯一标识这是一个React组件，赋值给$$typeof
    const REACT_ELEMENT_TYPE = supportSymbol ? Symbol.for('react.element') : 0xeac7;
    // 如果symbol不支持，设置为自定义的一个数字(React源码使用的就是0xeac7)

    // TODO: 配置了baseUrl但还是无法使用相对路径不知道为啥
    // 调用本函数，返回一个React组件的数据(数据结构由我们定义为React的组件的结构)
    const ReactElement = function (type, key, ref, props) {
        const element = {
            $$typeof: REACT_ELEMENT_TYPE,
            type,
            key,
            ref,
            props,
            __mark: "lan" // 自定义的一个字段，用于区分ReactElement和本项目创建的element
        };
        return element;
    };
    const jsxDev = (type, config) => {
        // 因为对于一个ReactElement来说，key和ref是必须的，所以先声明这两个属性
        let key = null;
        let ref = null;
        const props = {};
        for (const prop in config) {
            const val = config[prop];
            if (prop === 'key') {
                if (val !== undefined) {
                    key = '' + val;
                }
                continue;
            }
            if (prop === 'ref') {
                if (val !== undefined) {
                    ref = val;
                }
                continue;
            }
            // 判断是否是原型上的
            // TODO 
            if ({}.hasOwnProperty.call(config, prop)) {
                props[prop] = val;
            }
        }
        return ReactElement(type, key, ref, props);
    };
    // 在本项目中，定义jsx的生产环境和开发环境是一样，
    // 源码中开发环境dev下能做一些额外的检查，在本项目中不考虑
    // export const jsxDev = jsx;

    // 此文件是React包的入口文件，包含React的一些公用方法
    var index = {
        version: "0.0.0",
        createElement: jsxDev
    };

    return index;

}));
